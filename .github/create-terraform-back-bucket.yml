name: 'Create Terraform Backend Bucket'

on:
  workflow_call:


permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: export necessary variable to github env
        run: |
          TFVARS_FILE=${GITHUB_WORKSPACE}/terraform/terraform.tfvars
          export BACKEND_BUCKET=$(grep 'backend_bucket' $TFVARS_FILE | awk -F= '{print $2}' | tr -d '[:space:]' | tr -d '"')
          export GCS_BUCKET_LOCATION=$(grep 'gcs_bucket_location' $TFVARS_FILE | awk -F= '{print $2}' | tr -d '[:space:]' | tr -d '"')
          
          echo BACKEND_BUCKET=$BACKEND_BUCKET >> $GITHUB_ENV
          echo GCS_BUCKET_LOCATION=$GCS_BUCKET_LOCATION >> $GITHUB_ENV
          
          echo "BACKEND_BUCKET: $BACKEND_BUCKET"
          echo "GCS_BUCKET_LOCATION: $GCS_BUCKET_LOCATION"

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'


      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Check if bucket exists, if not create new
        run: |
          if ! gsutil ls -b gs://${{ env.BACKEND_BUCKET }}; then
            gsutil mb -l ${{ env.GCS_BUCKET_LOCATION }} gs://${{ env.BACKEND_BUCKET }}
            echo "Bucket created successfully!"
          else
            echo "Bucket already exists."
          fi